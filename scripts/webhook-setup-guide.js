/**
 * Gu√≠a paso a paso para configurar Webhooks de MercadoPago
 * Proyecto: PetGourmet
 * 
 * Esta gu√≠a te ayudar√° a configurar correctamente los webhooks en el panel de MercadoPago
 * siguiendo la documentaci√≥n oficial y las mejores pr√°cticas.
 */

// const chalk = require('chalk'); // No disponible, usaremos formato simple

// Configuraci√≥n espec√≠fica para PetGourmet
const PETGOURMET_CONFIG = {
  domain: 'https://petgourmet.mx',
  webhook_endpoint: '/api/mercadopago/webhook',
  full_webhook_url: 'https://petgourmet.mx/api/mercadopago/webhook',
  
  // Eventos cr√≠ticos para el negocio
  critical_events: [
    {
      name: 'Pagos',
      topic: 'payment',
      description: 'Pagos de productos individuales y suscripciones',
      business_impact: 'CR√çTICO - Sin esto no se procesan pagos'
    },
    {
      name: 'Planes y suscripciones',
      topic: 'subscription_authorized_payment',
      description: 'Pagos recurrentes de suscripciones',
      business_impact: 'CR√çTICO - Sin esto no funcionan las suscripciones'
    },
    {
      name: 'Planes y suscripciones',
      topic: 'subscription_preapproval',
      description: 'Vinculaci√≥n de suscripciones',
      business_impact: 'CR√çTICO - Para gestionar suscripciones'
    },
    {
      name: 'Planes y suscripciones',
      topic: 'subscription_preapproval_plan',
      description: 'Planes de suscripci√≥n personalizados',
      business_impact: 'CR√çTICO - Para planes personalizados'
    }
  ],
  
  // Eventos recomendados
  recommended_events: [
    {
      name: '√ìrdenes comerciales',
      topic: 'topic_merchant_order_wh',
      description: 'Estado completo de √≥rdenes',
      business_impact: 'RECOMENDADO - Mejor seguimiento de √≥rdenes'
    },
    {
      name: 'Contracargos',
      topic: 'topic_chargebacks_wh',
      description: 'Gesti√≥n de disputas',
      business_impact: 'RECOMENDADO - Protecci√≥n contra fraudes'
    },
    {
      name: 'Reclamos',
      topic: 'topic_claims_integration_wh',
      description: 'Reclamos y reembolsos',
      business_impact: 'RECOMENDADO - Mejor atenci√≥n al cliente'
    }
  ]
};

/**
 * Muestra la gu√≠a paso a paso
 */
function showStepByStepGuide() {
  console.log('\nüöÄ GU√çA PASO A PASO: CONFIGURACI√ìN DE WEBHOOKS MERCADOPAGO');
  console.log('======================================================================');
  
  // Paso 1: Acceso al panel
  console.log('\nüìã PASO 1: Acceder al Panel de Desarrolladores');
  console.log('1. Ve a: https://www.mercadopago.com.mx/developers/panel');
  console.log('2. Inicia sesi√≥n con tu cuenta de MercadoPago');
  console.log('3. Busca y selecciona la aplicaci√≥n de "PetGourmet"');
  console.log('   (Si no existe, cr√©ala primero desde "Crear aplicaci√≥n")');
  
  // Paso 2: Navegaci√≥n a webhooks
  console.log('\nüîß PASO 2: Configurar Webhooks');
  console.log('1. En el men√∫ lateral izquierdo, busca "Webhooks"');
  console.log('2. Haz clic en "Configurar notificaciones"');
  console.log('3. Ver√°s dos secciones: "Modo de prueba" y "Modo productivo"');
  
  // Paso 3: URLs
  console.log('\nüåê PASO 3: Configurar URLs');
  console.log('URL para MODO PRODUCTIVO (IMPORTANTE):');
  console.log(`>>> ${PETGOURMET_CONFIG.full_webhook_url} <<<`);
  console.log('\nURL para MODO DE PRUEBA:');
  console.log(`>>> ${PETGOURMET_CONFIG.full_webhook_url} <<<`);
  console.log('\nüí° Tip: Usamos la misma URL para ambos modos');
  
  // Paso 4: Eventos cr√≠ticos
  console.log('\n‚úÖ PASO 4: Seleccionar Eventos CR√çTICOS');
  console.log('‚ö†Ô∏è  ESTOS EVENTOS SON OBLIGATORIOS:');
  
  PETGOURMET_CONFIG.critical_events.forEach((event, index) => {
    console.log(`\n${index + 1}. ‚òëÔ∏è  ${event.name}`);
    console.log(`   T√≥pico: ${event.topic}`);
    console.log(`   Descripci√≥n: ${event.description}`);
    console.log(`   Impacto: ${event.business_impact}`);
  });
  
  // Paso 5: Eventos recomendados
  console.log('\nüîç PASO 5: Eventos RECOMENDADOS (Opcionales)');
  console.log('Estos eventos mejoran la funcionalidad:');
  
  PETGOURMET_CONFIG.recommended_events.forEach((event, index) => {
    console.log(`\n${index + 1}. ‚ö™ ${event.name}`);
    console.log(`   T√≥pico: ${event.topic}`);
    console.log(`   Descripci√≥n: ${event.description}`);
    console.log(`   Beneficio: ${event.business_impact}`);
  });
  
  // Paso 6: Clave secreta
  console.log('\nüîê PASO 6: Configurar Clave Secreta');
  console.log('1. En la secci√≥n de webhooks, busca "Clave secreta"');
  console.log('2. Genera una nueva clave secreta (o usa una existente)');
  console.log('3. COPIA esta clave secreta');
  console.log('4. IMPORTANTE: Guarda esta clave en tu archivo .env:');
  console.log('>>> MERCADOPAGO_WEBHOOK_SECRET=tu_clave_secreta_aqui <<<');
  
  // Paso 7: Guardar configuraci√≥n
  console.log('\nüíæ PASO 7: Guardar Configuraci√≥n');
  console.log('1. Revisa que todas las URLs est√©n correctas');
  console.log('2. Verifica que todos los eventos cr√≠ticos est√©n seleccionados');
  console.log('3. Haz clic en "Guardar configuraci√≥n"');
  console.log('4. Confirma que aparezca un mensaje de √©xito');
  
  // Paso 8: Pruebas
  console.log('\nüß™ PASO 8: Probar la Configuraci√≥n');
  console.log('1. En la misma p√°gina, busca "Simular notificaci√≥n"');
  console.log('2. Selecciona el evento "payment"');
  console.log('3. Haz clic en "Enviar notificaci√≥n de prueba"');
  console.log('4. Verifica que el webhook responda correctamente');
  console.log('5. Si todo est√° bien, ver√°s un estado "200 OK"');
}

/**
 * Muestra la checklist de verificaci√≥n
 */
function showVerificationChecklist() {
  console.log('\nüìã CHECKLIST DE VERIFICACI√ìN');
  console.log('========================================');
  
  const checklist = [
    '‚úÖ Aplicaci√≥n creada en el panel de MercadoPago',
    '‚úÖ URL de webhook configurada para producci√≥n',
    '‚úÖ URL de webhook configurada para pruebas',
    '‚úÖ Evento "Pagos" seleccionado',
    '‚úÖ Evento "subscription_authorized_payment" seleccionado',
    '‚úÖ Evento "subscription_preapproval" seleccionado',
    '‚úÖ Evento "subscription_preapproval_plan" seleccionado',
    '‚úÖ Clave secreta generada y guardada',
    '‚úÖ Variable MERCADOPAGO_WEBHOOK_SECRET configurada',
    '‚úÖ Configuraci√≥n guardada exitosamente',
    '‚úÖ Notificaci√≥n de prueba enviada y recibida',
    '‚úÖ Webhook responde con c√≥digo 200'
  ];
  
  checklist.forEach(item => {
    console.log(`   ${item}`);
  });
  
  console.log('\nüéâ Si todos los puntos est√°n marcados, ¬°la configuraci√≥n est√° completa!');
}

/**
 * Muestra informaci√≥n de troubleshooting
 */
function showTroubleshooting() {
  console.log('\nüö® SOLUCI√ìN DE PROBLEMAS COMUNES');
  console.log('=============================================');
  
  const problems = [
    {
      problem: 'Error 404 al probar webhook',
      solution: 'Verifica que la URL sea exactamente: https://petgourmet.mx/api/mercadopago/webhook'
    },
    {
      problem: 'Error 500 en el webhook',
      solution: 'Revisa los logs del servidor y verifica que MERCADOPAGO_WEBHOOK_SECRET est√© configurado'
    },
    {
      problem: 'No aparecen los eventos de suscripciones',
      solution: 'Aseg√∫rate de que tu aplicaci√≥n tenga habilitadas las funcionalidades de suscripciones'
    },
    {
      problem: 'Webhook no recibe notificaciones',
      solution: 'Verifica que el servidor est√© accesible desde internet y que no haya firewall bloqueando'
    },
    {
      problem: 'Error de validaci√≥n de firma',
      solution: 'Confirma que MERCADOPAGO_WEBHOOK_SECRET coincida exactamente con la clave del panel'
    }
  ];
  
  problems.forEach((item, index) => {
    console.log(`\n${index + 1}. Problema: ${item.problem}`);
    console.log(`   Soluci√≥n: ${item.solution}`);
  });
}

/**
 * Muestra informaci√≥n de contacto y recursos
 */
function showResources() {
  console.log('\nüìö RECURSOS ADICIONALES');
  console.log('==============================');
  
  console.log('\nüîó Enlaces √∫tiles:');
  console.log('   ‚Ä¢ Panel de desarrolladores: https://www.mercadopago.com.mx/developers/panel');
  console.log('   ‚Ä¢ Documentaci√≥n de webhooks: https://www.mercadopago.com.mx/developers/es/docs/your-integrations/notifications/webhooks');
  console.log('   ‚Ä¢ Simulador de notificaciones: (Disponible en el panel)');
  console.log('   ‚Ä¢ Centro de ayuda: https://www.mercadopago.com.mx/ayuda');
  
  console.log('\nüõ†Ô∏è  Comandos √∫tiles para verificar:');
  console.log('   ‚Ä¢ node scripts/verify-production-system.js');
  console.log('   ‚Ä¢ node scripts/test-webhook.js');
  console.log('   ‚Ä¢ node scripts/mercadopago-webhook-config.js');
}

// Funci√≥n principal
function main() {
  showStepByStepGuide();
  showVerificationChecklist();
  showTroubleshooting();
  showResources();
  
  console.log('\nüéØ ¬°Configuraci√≥n de webhooks lista para implementar!');
  console.log('\nEjecuta este script cuando necesites recordar los pasos de configuraci√≥n.');
}

// Ejecutar si se llama directamente
if (require.main === module) {
  main();
}

module.exports = {
  PETGOURMET_CONFIG,
  showStepByStepGuide,
  showVerificationChecklist,
  showTroubleshooting,
  showResources
};